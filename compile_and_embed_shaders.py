#!/bin/env python3 

import os
import os.path
import subprocess
import sys

def main():
	shader_temp_folder = os.path.join('build', 'temp', 'spirv')
	os.makedirs(shader_temp_folder, exist_ok=True)

	shader_files = [x for x in os.listdir('shader') if '.hlsl' in x]
	for shader in shader_files:
		in_path = os.path.join('shader', shader)
		out_path = os.path.join(shader_temp_folder, shader.replace('.hlsl', '.spv'))
		ret = subprocess.call(f'dxc -O3 -T cs_6_0 -E CSMain -spirv -fspv-target-env=vulkan1.0 -Fo {out_path} {in_path}', shell=True)
		if ret != 0:
			raise RuntimeError(f'Failed to compile: {in_path}')

		data = open(out_path, 'rb').read()
		f = open(os.path.join('shader', shader.replace('.hlsl', '.gen.h')), 'w')
		f.write('#pragma once\n\n')
		f.write('// This is compiled SPIR-V shader generated by compile_and_embed_shaders.py\n')
		f.write(f'// The source code for this shader is: {shader}\n')
		f.write(f'static const unsigned char {shader.split(".")[0]}_shader_source[{len(data)}]')
		f.write('= {\n\t')
		for i, b in enumerate(data):
			f.write(f'{hex(b)}, ')
			if i % 24 == 0:
				f.write('\n\t')
		f.write('\n};\n')


if __name__ == '__main__':
	main()
